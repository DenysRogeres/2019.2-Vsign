version: 2

references:
  default_docker_ruby_executor: &default_docker_ruby_executor
    image: circleci/ruby:2.6.3-stretch-node
    environment:
      BUNDLE_JOBS: 3
      BUNDLE_RETRY: 3
      BUNDLE_PATH: vendor/bundle
      PGHOST: 127.0.0.1
      PGUSER: vsign
      PGPASSWORD: ""
      RAILS_ENV: test
  postgres: &postgres
    image: circleci/postgres:10.3
    environment:
      POSTGRES_USER: vsign
      POSTGRES_DB: vsing_test
      POSTGRES_PASSWORD: ""

jobs:
  build:
    docker:
      - *default_docker_ruby_executor
    steps:
      - checkout
      # Which version of bundler?
      - run:
          name: Which bundler?
          command: bundle -v
      # bundle cache
      - restore_cache:
          keys:
            - vsign-{{ checksum "backend/Gemfile.lock" }}
            - vsign-
      - run:
          working_directory: ./backend
          name: Bundle Install
          command: bundle check || bundle install
      # Store bundle cache
      - save_cache:
          key: vsign-{{ checksum "backend/Gemfile.lock" }}
          paths:
            - vendor/bundle

  deploy_staging:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Backend to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/vsign-api-staging.git `git subtree split --prefix backend develop`:refs/heads/master --force
  deploy_production:
    docker:
      - image: buildpack-deps:trusty
    steps:
      - checkout
      - run:
          name: Deploy Backend to Heroku
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/vsign-api.git `git subtree split --prefix backend master`:refs/heads/master --force
  test:
    #parallelism: 3
    docker:
      - *default_docker_ruby_executor
      - *postgres
    steps:
      - checkout
      - restore_cache:
          keys:
            - vsign-{{ checksum "backend/Gemfile.lock" }}
            - vsign-
      - run:
          working_directory: ./backend
          name: Bundle Install
          command: bundle check || bundle install

      - run:
          working_directory: ./backend
          name: Wait for DB
          command: dockerize -wait tcp://localhost:5432 -timeout 1m

      - run:
          working_directory: ./backend
          name: Database setup
          command: bundle exec rails db:schema:load --trace

      - run:
          working_directory: ./backend
          name: RSpec
          command: |
            mkdir -p test-results/rspec test-artifacts
            ./cc-test-reporter before-build
            TESTFILES=$(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
            bundle exec rspec --profile 10 \
                              --color \
                              --order random \
                              --require rails_helper \
                              --format RspecJunitFormatter \
                              --out test-results/rspec/rspec.xml \
                              --format progress \
                              -- ${TESTFILES}

workflows:
  version: 2
  build_and_test:
    jobs:
      - build
      - test:
          requires:
            - build
  build_and_deploy_production:
    jobs:
      - build
      - deploy_production:
          requires:
            - build
          filters:
            branches:
              only: master
  build_and_deploy_staging:
    jobs:
      - build
      - deploy_staging:
          requires:
            - build
          filters:
            branches:
              only: develop
